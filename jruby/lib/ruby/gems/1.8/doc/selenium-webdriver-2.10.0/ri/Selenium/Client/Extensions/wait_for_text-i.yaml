--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Wait for some text to be present (the wait is happening browser side).
  - !ruby/struct:SM::Flow::P 
    body: wait_for_text will search for the given argument within the innerHTML of the current DOM. Note that this method treats a single string as a special case.
  - !ruby/struct:SM::Flow::H 
    level: 4
    text: Parameters
  - !ruby/struct:SM::Flow::P 
    body: "wait_for_text accepts an optional hash of parameters:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: <tt>:element</tt> - a selenium locator for an element limiting the search scope.
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: <tt>:timeout_in_seconds</tt> - duration in seconds after which we time out if text cannot be found.
    type: :BULLET
  - !ruby/struct:SM::Flow::H 
    level: 4
    text: Regular Expressions
  - !ruby/struct:SM::Flow::P 
    body: In addition to plain strings, wait_for_text accepts regular expressions as the pattern specification.
  - !ruby/struct:SM::Flow::H 
    level: 4
    text: Examples
  - !ruby/struct:SM::Flow::P 
    body: "The following are equivalent, and will match &quot;some text&quot; anywhere within the document:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  wait_for_text &quot;some text&quot;\n  wait_for_text /some text/\n"
  - !ruby/struct:SM::Flow::P 
    body: "This will match &quot;some text&quot; anywhere within the specified element:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  wait_for_text /some text/, :element =&gt; &quot;container&quot;\n"
  - !ruby/struct:SM::Flow::P 
    body: "This will match &quot;some text&quot; only if it exactly matches the complete innerHTML of the specified element:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  wait_for_text &quot;some text&quot;, :element =&gt; &quot;container&quot;\n"
full_name: Selenium::Client::Extensions#wait_for_text
is_singleton: false
name: wait_for_text
params: (pattern, options={})
visibility: public
