The Ramaze development team is happy to announce version 2009.07 of Ramaze, the
light and modular open source web framework that tries to stay out of your way.

This release contains mostly bug fixes and compatibility improvements.

Also, thanks to the work of Jeremy Evans, Scaffolding Extensions works with the
current version of Ramaze again, giving you a powerful and simple way to
provide CRUD and admin interfaces for Sequel and ActiveRecord.

I also would like to take this opportunity to ask for volunteers that are
running on Windows, we are currently working on a major overhaul of the ramaze
executable and would like to make sure it behaves correctly.
If you are interested, check out the modular-bin branch and report any issues
on the bug tracker or hang out on IRC.


== Metadata

Home page:       http://ramaze.net
Wiki:            http://wiki.ramaze.net

Repository:      http://github.com/manveru/ramaze
Bug tracker:     http://github.com/manveru/ramaze/issues

Git clone:       git://github.com/manveru/ramaze
Current tarball: http://github.com/manveru/ramaze/tarball/master

IRC: #ramaze on irc.freenode.net


Simple example:

  require 'ramaze'

  class MainController < Ramaze::Controller
    def index
      'Hello, World!'
    end
  end

  Ramaze.start


== Summarized changes with their respective commits

- Aaron MÃ¼ller
  - Update identity helper with new link helper

- Masahiro Nakagawa
  - Rewrite localization example

- Michael Fellinger (manveru)
  - Adding support for the less CSS templating engine
  - Adding LRU cache
  - Fixing problems in paginate
  - Better defaults for proto specs
  - The Helper::Cache#cache_value optionally takes a block now
  - Make sure proto/config.ru points to correct location
  - Fix annoying behaviour when '/' location is assigned to an app loaded
    earlier, apps loaded afterwards would overwrite the mapping. This caused
    some very annoying and hard to debug behaviour.
  - Fix bacon task dependency
  - Fix Controller to work properly on Ruby 1.8.6
  - Fix bug when using localmemcache on Ruby 1.9
  - Fix the misc/css example
  - Remove Helper::Cache#cache method
  - Use absolute paths for requires in all ramaze specs, $LOAD_PATH in Ruby
    1.9.2 will not include '.'
  - Remove ContentLength middleware from :live and :dev modes. Rack handlers
    use it already.
  - Refactor contrib/addressable_route, it now uses instance variables and can
    take a mapping on initialize.

A complete Changelog is available at
http://github.com/manveru/ramaze/tree/master/doc/CHANGELOG?raw=true


== Known issues

- When running on Ruby 1.9.x, Rack 1.0.0 has problems with the encoding, it is
  recommended to use master HEAD from http://github.com/rack/rack until the
  next release of Rack.
- When running on Ruby 1.9.2dev (ruby trunk), using the thin handler can lead
  to memory leaks. The cause is yet unknown, please use Ruby 1.9.1 or another
  handler (mongrel, webrick, and fcgi are known to work well)


== Ramaze Features

- Builds on top of the Rack library, which provides easy use of adapters like
  Mongrel, WEBrick, LiteSpeed, Thin, CGI, SCGI, or FCGI.

- Supports a wide range of templating-engines like: ERB, Erubis, Haml, Less,
  Liquid, Maruku, Redcloth, Remarkably, Sass, Tagz, Tenjin. And its own engines
  called Etanni, Ezamar, Gestalt, and Nagoro.

- Highly modular structure: you can just use the parts you like. This also
  means that it's very simple to add your own customizations.

- A variety of helpers is already available, giving you things like advanced
  caching, OpenID-authentication or aspect-oriented programming for your
  controllers.

- It is possible to use the ORM you like, be it Sequel, DataMapper,
  ActiveRecord, Og, Kansas or something more simplistic like M4DBI.

- Good documentation: although we don't have 100% documentation right now (dcov
  says around 75%), just about every part of Ramaze is covered with basic and
  advanced docs. There are a variety of examples, screencasts and a tutorial
  available.

- Friendly community: there are people from all over the world using Ramaze, so
  you can get plenty of help and information around the clock.


For more information please come to http://ramaze.net or ask directly on IRC
irc://irc.freenode.net/#ramaze

Thank you, Michael 'manveru' Fellinger and the Ramaze community
