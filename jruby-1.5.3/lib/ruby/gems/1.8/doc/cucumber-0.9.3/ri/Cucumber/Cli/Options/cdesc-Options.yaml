--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
constants: 
  - !ruby/object:RI::Constant 
    comment: 
    name: INDENT
    value: "' ' * 53"
  - !ruby/object:RI::Constant 
    comment: 
    name: BUILTIN_FORMATS
    value: "{         'html'        => ['Cucumber::Formatter::Html',        'Generates a nice looking HTML report.'],         'pretty'      => ['Cucumber::Formatter::Pretty',      'Prints the feature as is - in colours.'],         'pdf'         => ['Cucumber::Formatter::Pdf',         \"Generates a PDF report. You need to have the\\n\" +                                                               \"#{INDENT}prawn gem installed. Will pick up logo from\\n\" +                                                               \"#{INDENT}features/support/logo.png or\\n\" +                                                               \"#{INDENT}features/support/logo.jpg if present.\"],         'progress'    => ['Cucumber::Formatter::Progress',    'Prints one character per scenario.'],         'rerun'       => ['Cucumber::Formatter::Rerun',       'Prints failing files with line numbers.'],         'usage'       => ['Cucumber::Formatter::Usage',       \"Prints where step definitions are used.\\n\" +                                                               \"#{INDENT}The slowest step definitions (with duration) are\\n\" +                                                               \"#{INDENT}listed first. If --dry-run is used the duration\\n\" +                                                               \"#{INDENT}is not shown, and step definitions are sorted by\\n\" +                                                               \"#{INDENT}filename instead.\"],         'stepdefs'    => ['Cucumber::Formatter::Stepdefs',    \"Prints All step definitions with their locations. Same as\\n\" +                                                               \"#{INDENT}the usage formatter, except that steps are not printed.\"],         'junit'       => ['Cucumber::Formatter::Junit',       'Generates a report similar to Ant+JUnit.'],         'json'        => ['Cucumber::Formatter::Json',        'Prints the feature as JSON'],         'json_pretty' => ['Cucumber::Formatter::JsonPretty',  'Prints the feature as pretty JSON'],         'tag_cloud'   => ['Cucumber::Formatter::TagCloud',    'Prints a tag cloud of tag usage.'],         'debug'       => ['Cucumber::Formatter::Debug',       'For developing formatters - prints the calls made to the listeners.']"
  - !ruby/object:RI::Constant 
    comment: 
    name: FORMAT_HELP
    value: "(BUILTIN_FORMATS.keys.sort.map do |key|         \"  #{key}#{' ' * (max - key.length)} : #{BUILTIN_FORMATS[key][1]}\""
full_name: Cucumber::Cli::Options
includes: []

instance_methods: []

name: Options
superclass: Object
