--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
  - !ruby/struct:SM::Flow::P 
    body: This module defines the API for programming language support in Cucumber. While Cucumber itself is written in Ruby, any programming language can be supported by implementing this API.
  - !ruby/struct:SM::Flow::P 
    body: "For the sake of illustration we'll consider an imaginary language called _why. _why files have the .why extension, so we need to put support for this language in the <tt>Cucumber::WhySupport::WhyLanguage</tt>. This class must be defined in a file called <tt>cucumber/why_support/why_language.rb</tt> and be available on Ruby's <tt>$LOAD_PATH</tt>:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  module Cucumber\n    module WhySupport\n      class WhyLanguage\n\n        # Uses whatever available language bridge to load\n        # <tt>why_file</tt> and returns an Array of StepDefinition.\n        def load_code_file(why_file)\n        end\n      end\n    end\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: Each language implementation manages its own hooks, and must execute them at appropriate times.
constants: []

full_name: Cucumber::LanguageSupport
includes: []

instance_methods: []

name: LanguageSupport
superclass: 
