--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Compares <tt>other_table</tt> to self. If <tt>other_table</tt> contains columns and/or rows that are not in self, new columns/rows are added at the relevant positions, marking the cells in those rows/columns as <tt>surplus</tt>. Likewise, if <tt>other_table</tt> lacks columns and/or rows that are present in self, these are marked as <tt>missing</tt>.
  - !ruby/struct:SM::Flow::P 
    body: <tt>surplus</tt> and <tt>missing</tt> cells are recognised by formatters and displayed so that it's easy to read the differences.
  - !ruby/struct:SM::Flow::P 
    body: Cells that are different, but <em>look</em> identical (for example the boolean true and the string &quot;true&quot;) are converted to their Object#inspect representation and preceded with (i) - to make it easier to identify where the difference actually is.
  - !ruby/struct:SM::Flow::P 
    body: "Since all tables that are passed to StepDefinitions always have String objects in their cells, you may want to use #map_column! before calling #diff!. You can use #map_column! on either of the tables."
  - !ruby/struct:SM::Flow::P 
    body: "A Different error is raised if there are missing rows or columns, or surplus rows. An error is <em>not</em> raised for surplus columns. Whether to raise or not raise can be changed by setting values in <tt>options</tt> to true or false:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "<tt>missing_row</tt> : Raise on missing rows (defaults to true)"
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "<tt>surplus_row</tt> : Raise on surplus rows (defaults to true)"
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "<tt>missing_col</tt> : Raise on missing columns (defaults to true)"
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "<tt>surplus_col</tt> : Raise on surplus columns (defaults to false)"
    type: :BULLET
  - !ruby/struct:SM::Flow::P 
    body: "The <tt>other_table</tt> argument can be another Table, an Array of Array or an Array of Hash (similar to the structure returned by #hashes)."
  - !ruby/struct:SM::Flow::P 
    body: Calling this method is particularly useful in <tt>Then</tt> steps that take a Table argument, if you want to compare that table to some actual values.
full_name: Cucumber::Ast::Table#diff!
is_singleton: false
name: diff!
params: (other_table, options={})
visibility: public
