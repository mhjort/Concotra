--- !ruby/object:RI::ClassDescription 
attributes: 
  - !ruby/object:RI::Attribute 
    comment: 
    name: proxy
    rw: RW
class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: add_before_execution_proc
  - !ruby/object:RI::MethodSummary 
    name: create_log
  - !ruby/object:RI::MethodSummary 
    name: delete
  - !ruby/object:RI::MethodSummary 
    name: get
  - !ruby/object:RI::MethodSummary 
    name: head
  - !ruby/object:RI::MethodSummary 
    name: log=
  - !ruby/object:RI::MethodSummary 
    name: options
  - !ruby/object:RI::MethodSummary 
    name: post
  - !ruby/object:RI::MethodSummary 
    name: put
  - !ruby/object:RI::MethodSummary 
    name: version
comment: 
  - !ruby/struct:SM::Flow::P 
    body: This module's static methods are the entry point for using the REST client.
  - !ruby/struct:SM::Flow::VERB 
    body: "  # GET\n  xml = RestClient.get 'http://example.com/resource'\n  jpg = RestClient.get 'http://example.com/resource', :accept =&gt; 'image/jpg'\n\n  # authentication and SSL\n  RestClient.get 'https://user:password@example.com/private/resource'\n\n  # POST or PUT with a hash sends parameters as a urlencoded form body\n  RestClient.post 'http://example.com/resource', :param1 =&gt; 'one'\n\n  # nest hash parameters\n  RestClient.post 'http://example.com/resource', :nested =&gt; { :param1 =&gt; 'one' }\n\n  # POST and PUT with raw payloads\n  RestClient.post 'http://example.com/resource', 'the post body', :content_type =&gt; 'text/plain'\n  RestClient.post 'http://example.com/resource.xml', xml_doc\n  RestClient.put 'http://example.com/resource.pdf', File.read('my.pdf'), :content_type =&gt; 'application/pdf'\n\n  # DELETE\n  RestClient.delete 'http://example.com/resource'\n\n  # retreive the response http code and headers\n  res = RestClient.get 'http://example.com/some.jpg'\n  res.code                    # =&gt; 200\n  res.headers[:content_type]  # =&gt; 'image/jpg'\n\n  # HEAD\n  RestClient.head('http://example.com').headers\n"
  - !ruby/struct:SM::Flow::P 
    body: "To use with a proxy, just set RestClient.proxy to the proper http proxy:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  RestClient.proxy = &quot;http://proxy.example.com/&quot;\n"
  - !ruby/struct:SM::Flow::P 
    body: "Or inherit the proxy from the environment:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  RestClient.proxy = ENV['http_proxy']\n"
  - !ruby/struct:SM::Flow::P 
    body: "For live tests of RestClient, try using http://rest-test.heroku.com, which echoes back information about the rest call:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  &gt;&gt; RestClient.put 'http://rest-test.heroku.com/resource', :foo =&gt; 'baz'\n  =&gt; &quot;PUT http://rest-test.heroku.com/resource with a 7 byte payload, content type application/x-www-form-urlencoded {\\&quot;foo\\&quot;=&gt;\\&quot;baz\\&quot;}&quot;\n"
constants: 
  - !ruby/object:RI::Constant 
    comment: 
    name: STATUSES
    value: "{100 => 'Continue',               101 => 'Switching Protocols',               102 => 'Processing', #WebDAV                200 => 'OK',               201 => 'Created',               202 => 'Accepted',               203 => 'Non-Authoritative Information', # http/1.1               204 => 'No Content',               205 => 'Reset Content',               206 => 'Partial Content',               207 => 'Multi-Status', #WebDAV                300 => 'Multiple Choices',               301 => 'Moved Permanently',               302 => 'Found',               303 => 'See Other', # http/1.1               304 => 'Not Modified',               305 => 'Use Proxy', # http/1.1               306 => 'Switch Proxy', # no longer used               307 => 'Temporary Redirect', # http/1.1                              400 => 'Bad Request',               401 => 'Unauthorized',               402 => 'Payment Required',               403 => 'Forbidden',               404 => 'Resource Not Found',               405 => 'Method Not Allowed',               406 => 'Not Acceptable',               407 => 'Proxy Authentication Required',               408 => 'Request Timeout',               409 => 'Conflict',               410 => 'Gone',               411 => 'Length Required',               412 => 'Precondition Failed',               413 => 'Request Entity Too Large',               414 => 'Request-URI Too Long',               415 => 'Unsupported Media Type',               416 => 'Requested Range Not Satisfiable',               417 => 'Expectation Failed',               418 => 'I\\'m A Teapot',               421 => 'Too Many Connections From This IP',               422 => 'Unprocessable Entity', #WebDAV               423 => 'Locked', #WebDAV               424 => 'Failed Dependency', #WebDAV               425 => 'Unordered Collection', #WebDAV               426 => 'Upgrade Required',                449 => 'Retry With', #Microsoft               450 => 'Blocked By Windows Parental Controls', #Microsoft                500 => 'Internal Server Error',               501 => 'Not Implemented',               502 => 'Bad Gateway',               503 => 'Service Unavailable',               504 => 'Gateway Timeout',               505 => 'HTTP Version Not Supported',               506 => 'Variant Also Negotiates',               507 => 'Insufficient Storage', #WebDAV               509 => 'Bandwidth Limit Exceeded', #Apache               510 => 'Not Extended'}"
full_name: RestClient
includes: []

instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: "<<"
  - !ruby/object:RI::MethodSummary 
    name: "<<"
  - !ruby/object:RI::MethodSummary 
    name: "<<"
name: RestClient
superclass: 
