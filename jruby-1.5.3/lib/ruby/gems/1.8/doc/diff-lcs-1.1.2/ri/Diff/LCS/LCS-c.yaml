--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: seq1[ii])
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Given two sequenced Enumerables, LCS returns an Array containing their longest common subsequences.
  - !ruby/struct:SM::Flow::VERB 
    body: "  lcs = Diff::LCS.LCS(seq1, seq2)\n"
  - !ruby/struct:SM::Flow::P 
    body: "This array whose contents is such that:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  lcs.each_with_index do |ee, ii|\n    assert(ee.nil? || (seq1[ii] == seq2[ee]))\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: If a block is provided, the matching subsequences will be yielded from +seq1+ in turn and may be modified before they are placed into the returned Array of subsequences.
full_name: Diff::LCS::LCS
is_singleton: true
name: LCS
params: (seq1, seq2, &block) {|seq1[ii])| ...}
visibility: public
