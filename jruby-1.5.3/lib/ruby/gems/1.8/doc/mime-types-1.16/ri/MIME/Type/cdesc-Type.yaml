--- !ruby/object:RI::ClassDescription 
attributes: 
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the whole MIME content-type string.
      - !ruby/struct:SM::Flow::VERB 
        body: "  text/plain        =&gt; text/plain\n  x-chemical/x-pdb  =&gt; x-chemical/x-pdb\n"
    name: content_type
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the default encoding for the MIME::Type based on the media type.
    name: default_encoding
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: "The documentation for this MIME::Type. Documentation about media types will be found on a media type definition as a comment. Documentation will be found through #docs."
    name: docs
    rw: RW
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: "The encoding (7bit, 8bit, quoted-printable, or base64) required to transport the data of this content type safely across a network, which roughly corresponds to Content-Transfer-Encoding. A value of <tt>nil</tt> or <tt>:default</tt> will reset the #encoding to the #default_encoding for the MIME::Type. Raises ArgumentError if the encoding provided is invalid."
      - !ruby/struct:SM::Flow::P 
        body: If the encoding is not provided on construction, this will be either 'quoted-printable' (for text/* media types) and 'base64' for eveything else.
    name: encoding
    rw: RW
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: "The list of extensions which are known to be used for this MIME::Type. Non-array values will be coerced into an array with #to_a. Array values will be flattened and <tt>nil</tt> values removed."
    name: extensions
    rw: RW
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the media type of the simplified MIME type.
      - !ruby/struct:SM::Flow::VERB 
        body: "  text/plain        =&gt; text\n  x-chemical/x-pdb  =&gt; chemical\n"
    name: media_type
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Sets the obsolescence indicator for this media type.
    name: obsolete
    rw: W
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the media type of the unmodified MIME type.
      - !ruby/struct:SM::Flow::VERB 
        body: "  text/plain        =&gt; text\n  x-chemical/x-pdb  =&gt; x-chemical\n"
    name: raw_media_type
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the media type of the unmodified MIME type.
      - !ruby/struct:SM::Flow::VERB 
        body: "  text/plain        =&gt; plain\n  x-chemical/x-pdb  =&gt; x-pdb\n"
    name: raw_sub_type
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: The MIME types main- and sub-label can both start with <tt>x-</tt>, which indicates that it is a non-registered name. Of course, after registration this flag can disappear, adds to the confusing proliferation of MIME types. The simplified string has the <tt>x-</tt> removed and are translated to lowercase.
      - !ruby/struct:SM::Flow::VERB 
        body: "  text/plain        =&gt; text/plain\n  x-chemical/x-pdb  =&gt; chemical/pdb\n"
    name: simplified
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the sub-type of the simplified MIME type.
      - !ruby/struct:SM::Flow::VERB 
        body: "  text/plain        =&gt; plain\n  x-chemical/x-pdb  =&gt; pdb\n"
    name: sub_type
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: The regexp for the operating system that this MIME::Type is specific to.
    name: system
    rw: RW
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: "The encoded URL list for this MIME::Type. See #urls for more information."
    name: url
    rw: RW
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Returns the media type or types that should be used instead of this media type, if it is obsolete. If there is no replacement media type, or it is not obsolete, <tt>nil</tt> will be returned.
    name: use_instead
    rw: R
class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: from_array
  - !ruby/object:RI::MethodSummary 
    name: from_hash
  - !ruby/object:RI::MethodSummary 
    name: from_mime_type
  - !ruby/object:RI::MethodSummary 
    name: new
  - !ruby/object:RI::MethodSummary 
    name: simplified
comment: 
  - !ruby/struct:SM::Flow::P 
    body: The definition of one MIME content-type.
  - !ruby/struct:SM::Flow::H 
    level: 2
    text: Usage
  - !ruby/struct:SM::Flow::VERB 
    body: " require 'mime/types'\n\n plaintext = MIME::Types['text/plain']\n print plaintext.media_type           # =&gt; 'text'\n print plaintext.sub_type             # =&gt; 'plain'\n\n puts plaintext.extensions.join(&quot; &quot;)  # =&gt; 'asc txt c cc h hh cpp'\n\n puts plaintext.encoding              # =&gt; 8bit\n puts plaintext.binary?               # =&gt; false\n puts plaintext.ascii?                # =&gt; true\n puts plaintext == 'text/plain'       # =&gt; true\n puts MIME::Type.simplified('x-appl/x-zip') # =&gt; 'appl/zip'\n"
constants: 
  - !ruby/object:RI::Constant 
    comment: 
    name: VERSION
    value: "'1.16'"
  - !ruby/object:RI::Constant 
    comment: 
    name: MEDIA_TYPE_RE
    value: "%r{([-\\w.+]+)/([-\\w.+]*)}o"
  - !ruby/object:RI::Constant 
    comment: 
    name: UNREG_RE
    value: "%r{[Xx]-}o"
  - !ruby/object:RI::Constant 
    comment: 
    name: ENCODING_RE
    value: "%r{(?:base64|7bit|8bit|quoted\\-printable)}o"
  - !ruby/object:RI::Constant 
    comment: 
    name: PLATFORM_RE
    value: "%r|#{RUBY_PLATFORM}|o"
  - !ruby/object:RI::Constant 
    comment: 
    name: SIGNATURES
    value: "%w(application/pgp-keys application/pgp                        application/pgp-signature application/pkcs10                        application/pkcs7-mime application/pkcs7-signature                        text/vcard)"
  - !ruby/object:RI::Constant 
    comment: 
    name: IANA_URL
    value: "\"http://www.iana.org/assignments/media-types/%s/%s\""
  - !ruby/object:RI::Constant 
    comment: 
    name: RFC_URL
    value: "\"http://rfc-editor.org/rfc/rfc%s.txt\""
  - !ruby/object:RI::Constant 
    comment: 
    name: DRAFT_URL
    value: "\"http://datatracker.ietf.org/public/idindex.cgi?command=id_details&filename=%s\""
  - !ruby/object:RI::Constant 
    comment: 
    name: LTSW_URL
    value: "\"http://www.ltsw.se/knbase/internet/%s.htp\""
  - !ruby/object:RI::Constant 
    comment: 
    name: CONTACT_URL
    value: "\"http://www.iana.org/assignments/contact-people.htm#%s\""
full_name: MIME::Type
includes: 
  - !ruby/object:RI::IncludedModule 
    name: Comparable
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: <=>
  - !ruby/object:RI::MethodSummary 
    name: ascii?
  - !ruby/object:RI::MethodSummary 
    name: binary?
  - !ruby/object:RI::MethodSummary 
    name: complete?
  - !ruby/object:RI::MethodSummary 
    name: default_encoding
  - !ruby/object:RI::MethodSummary 
    name: docs=
  - !ruby/object:RI::MethodSummary 
    name: eql?
  - !ruby/object:RI::MethodSummary 
    name: like?
  - !ruby/object:RI::MethodSummary 
    name: obsolete?
  - !ruby/object:RI::MethodSummary 
    name: platform?
  - !ruby/object:RI::MethodSummary 
    name: priority_compare
  - !ruby/object:RI::MethodSummary 
    name: registered?
  - !ruby/object:RI::MethodSummary 
    name: signature?
  - !ruby/object:RI::MethodSummary 
    name: system?
  - !ruby/object:RI::MethodSummary 
    name: to_a
  - !ruby/object:RI::MethodSummary 
    name: to_hash
  - !ruby/object:RI::MethodSummary 
    name: to_s
  - !ruby/object:RI::MethodSummary 
    name: to_str
  - !ruby/object:RI::MethodSummary 
    name: urls
  - !ruby/object:RI::MethodSummary 
    name: use_instead
name: Type
superclass: Object
